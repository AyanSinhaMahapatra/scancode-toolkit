[
  "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n",
  "  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n",
  "\n",
  "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n",
  "  <head>\n",
  "     \n",
  "    \n",
  "     Pygments &mdash; Pygments \n",
  "    \n",
  "     \n",
  "     \n",
  "    \n",
  "     \n",
  "      var DOCUMENTATION_OPTIONS = {\n",
  "        URL_ROOT:    '/',\n",
  "        VERSION:     '',\n",
  "        COLLAPSE_INDEX: false,\n",
  "        FILE_SUFFIX: '',\n",
  "        HAS_SOURCE:  false\n",
  "      };\n",
  "     \n",
  "      \n",
  "      \n",
  "      \n",
  "    \n",
  "    \n",
  "     \n",
  "     \n",
  "    <link href='http://fonts.googleapis.com/css?family=PT+Sans:300,400,700'\n",
  "          rel='stylesheet' type='text/css'>\n",
  "     \n",
  "      // intelligent scrolling of the sidebar content\n",
  "      $(window).scroll(function() {\n",
  "        var sb = $('.sphinxsidebarwrapper');\n",
  "        var win = $(window);\n",
  "        var sbh = sb.height();\n",
  "        var offset = $('.sphinxsidebar').position()['top'];\n",
  "        var wintop = win.scrollTop();\n",
  "        var winbot = wintop + win.innerHeight();\n",
  "        var curtop = sb.position()['top'];\n",
  "        var curbot = curtop + sbh;\n",
  "        // does sidebar fit in window?\n",
  "        if (sbh < win.innerHeight()) {\n",
  "          // yes: easy case -- always keep at the top\n",
  "          sb.css('top', $u.min([$u.max([0, wintop - offset - 10]),\n",
  "                                $(document).height() - sbh - 200]));\n",
  "        } else {\n",
  "          // no: only scroll if top/bottom edge of sidebar is at\n",
  "          // top/bottom edge of window\n",
  "          if (curtop > wintop && curbot > winbot) {\n",
  "            sb.css('top', $u.max([wintop - offset - 10, 0]));\n",
  "          } else if (curtop < wintop && curbot < winbot) {\n",
  "            sb.css('top', $u.min([winbot - sbh - offset - 20,\n",
  "                                  $(document).height() - sbh - 200]));\n",
  "          }\n",
  "        }\n",
  "      });\n",
  "     \n",
  "  </head>\n",
  "   \n",
  "     \n",
  "       \n",
  "         \n",
  "            Home</a> \n",
  "            Demo</a> \n",
  "            Languages</a> \n",
  "            FAQ</a> \n",
  "            Get it</a> \n",
  "            Docs</a> \n",
  "         \n",
  "         \n",
  "           \n",
  "             \n",
  "          </a>\n",
  "        \n",
  "      \n",
  "    \n",
  "\n",
  "     \n",
  "       \n",
  "         \n",
  "           \n",
  "            \n",
  "<h1 class=\"heading\">Demo entry 1487240</h1>\n",
  "\n",
  "<p> html generated by pygment </p>\n",
  "\n",
  " \n",
  "    Use this style:  &nbsp;\n",
  "    <select id=\"style\" name=\"style\" onchange=\"document.forms.filter_form.submit()\">\n",
  "      \n",
  "       manni \n",
  "      \n",
  "       igor \n",
  "      \n",
  "       xcode \n",
  "      \n",
  "       vim \n",
  "      \n",
  "       autumn \n",
  "      \n",
  "       vs \n",
  "      \n",
  "       rrt \n",
  "      \n",
  "       native \n",
  "      \n",
  "       perldoc \n",
  "      \n",
  "       borland \n",
  "      \n",
  "       tango \n",
  "      \n",
  "       emacs \n",
  "      \n",
  "       friendly \n",
  "      \n",
  "       monokai \n",
  "      \n",
  "       paraiso-dark \n",
  "      \n",
  "       colorful \n",
  "      \n",
  "       murphy \n",
  "      \n",
  "       bw \n",
  "      \n",
  "       pastie \n",
  "      \n",
  "       paraiso-light \n",
  "      \n",
  "       trac \n",
  "      \n",
  "       default \n",
  "      \n",
  "       fruity \n",
  "      \n",
  "      &nbsp;\n",
  "     \n",
  "  </p>\n",
  " \n",
  "\n",
  "<p>Submitted by  anonymous \n",
  "  on Apr 20, 2015 at 11:15  \n",
  "  Language: HTML. Code size: 11.1 kB.\n",
  "</p>\n",
  "\n",
  "\n",
  "<div style=\"border: 1px solid #ddd; background-color: #fff0f0; padding: 10px;\n",
  "            margin-top: 15px\">\n",
  " <b>Important:</b> This entry is not yet stored in the database.</p>\n",
  " \n",
  "   \n",
  "    \n",
  "&nbsp;or&nbsp;\n",
  " \n",
  "   \n",
  "    \n",
  " \n",
  "\n",
  "\n",
  " \n",
  "   &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; \n",
  "   &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \n",
  "\n",
  " &lt;html   xmlns=  &quot;http://www.w3.org/1999/xhtml&quot;  &gt; \n",
  "   &lt;head&gt; \n",
  "     &lt;meta   http-equiv=  &quot;Content-Type&quot;   content=  &quot;text/html; charset=&quot;   /&gt; \n",
  "    \n",
  "     &lt;title&gt; Pygments  &amp;mdash;  Pygments &lt;/title&gt; \n",
  "    \n",
  "     &lt;link   rel=  &quot;stylesheet&quot;   href=  &quot;/_static/pygments14.css&quot;   type=  &quot;text/css&quot;   /&gt; \n",
  "     &lt;link   rel=  &quot;stylesheet&quot;   href=  &quot;/_static/pygments.css&quot;   type=  &quot;text/css&quot;   /&gt; \n",
  "    \n",
  "     &lt;script   type=  &quot;text/javascript&quot;  &gt; \n",
  "       var   DOCUMENTATION_OPTIONS   =   { \n",
  "         URL_ROOT  :      &#39;/&#39;  , \n",
  "         VERSION  :       &#39;&#39;  , \n",
  "         COLLAPSE_INDEX  :   false  , \n",
  "         FILE_SUFFIX  :   &#39;&#39;  , \n",
  "         HAS_SOURCE  :    false \n",
  "       }; \n",
  "     &lt;/script&gt; \n",
  "     &lt;script   type=  &quot;text/javascript&quot;   src=  &quot;/_static/jquery.js&quot;  &gt;&lt;/script&gt; \n",
  "     &lt;script   type=  &quot;text/javascript&quot;   src=  &quot;/_static/underscore.js&quot;  &gt;&lt;/script&gt; \n",
  "     &lt;script   type=  &quot;text/javascript&quot;   src=  &quot;/_static/doctools.js&quot;  &gt;&lt;/script&gt; \n",
  "    \n",
  "    \n",
  "     &lt;link   rel=  &quot;shortcut icon&quot;   href=  &quot;/_static/favicon.ico&quot;  /&gt; \n",
  "     &lt;link   rel=  &quot;top&quot;   title=  &quot;Pygments documentation&quot;   href=  &quot;/&quot;   /&gt; \n",
  "     &lt;link   href=  &#39;http://fonts.googleapis.com/css?family=PT+Sans:300,400,700&#39; \n",
  "           rel=  &#39;stylesheet&#39;   type=  &#39;text/css&#39;  &gt; \n",
  "     &lt;script   type=  &quot;text/javascript&quot;  &gt; \n",
  "       // intelligent scrolling of the sidebar content \n",
  "       $  (  window  ).  scroll  (  function  ()   { \n",
  "         var   sb   =   $  (  &#39;.sphinxsidebarwrapper&#39;  ); \n",
  "         var   win   =   $  (  window  ); \n",
  "         var   sbh   =   sb  .  height  (); \n",
  "         var   offset   =   $  (  &#39;.sphinxsidebar&#39;  ).  position  ()[  &#39;top&#39;  ]; \n",
  "         var   wintop   =   win  .  scrollTop  (); \n",
  "         var   winbot   =   wintop   +   win  .  innerHeight  (); \n",
  "         var   curtop   =   sb  .  position  ()[  &#39;top&#39;  ]; \n",
  "         var   curbot   =   curtop   +   sbh  ; \n",
  "         // does sidebar fit in window? \n",
  "         if   (  sbh   &lt;   win  .  innerHeight  ())   { \n",
  "           // yes: easy case -- always keep at the top \n",
  "           sb  .  css  (  &#39;top&#39;  ,   $u  .  min  ([  $u  .  max  ([  0  ,   wintop   -   offset   -   10  ]), \n",
  "                                 $  (  document  ).  height  ()   -   sbh   -   200  ])); \n",
  "         }   else   { \n",
  "           // no: only scroll if top/bottom edge of sidebar is at \n",
  "           // top/bottom edge of window \n",
  "           if   (  curtop   &gt;   wintop   &amp;&amp;   curbot   &gt;   winbot  )   { \n",
  "             sb  .  css  (  &#39;top&#39;  ,   $u  .  max  ([  wintop   -   offset   -   10  ,   0  ])); \n",
  "           }   else   if   (  curtop   &lt;   wintop   &amp;&amp;   curbot   &lt;   winbot  )   { \n",
  "             sb  .  css  (  &#39;top&#39;  ,   $u  .  min  ([  winbot   -   sbh   -   offset   -   20  , \n",
  "                                   $  (  document  ).  height  ()   -   sbh   -   200  ])); \n",
  "           } \n",
  "         } \n",
  "       }); \n",
  "     &lt;/script&gt; \n",
  "   &lt;/head&gt; \n",
  "   &lt;body   role=  &quot;document&quot;  &gt; \n",
  "     &lt;div   class=  &quot;outerwrapper&quot;  &gt; \n",
  "       &lt;div   class=  &quot;pageheader&quot;  &gt; \n",
  "         &lt;ul&gt; \n",
  "           &lt;li&gt;&lt;a   href=  &quot;/&quot;  &gt; Home &lt;/a&gt;&lt;/li&gt; \n",
  "           &lt;li&gt;&lt;a   href=  &quot;/demo/&quot;  &gt; Demo &lt;/a&gt;&lt;/li&gt; \n",
  "           &lt;li&gt;&lt;a   href=  &quot;/languages/&quot;  &gt; Languages &lt;/a&gt;&lt;/li&gt; \n",
  "           &lt;li&gt;&lt;a   href=  &quot;/faq/&quot;  &gt; FAQ &lt;/a&gt;&lt;/li&gt; \n",
  "           &lt;li&gt;&lt;a   href=  &quot;/download/&quot;  &gt; Get it &lt;/a&gt;&lt;/li&gt; \n",
  "           &lt;li&gt;&lt;a   href=  &quot;/docs/&quot;  &gt; Docs &lt;/a&gt;&lt;/li&gt; \n",
  "         &lt;/ul&gt; \n",
  "         &lt;div&gt; \n",
  "           &lt;a   href=  &quot;/&quot;  &gt; \n",
  "             &lt;img   src=  &quot;/_static/logo.png&quot;   alt=  &quot;Pygments logo&quot;   /&gt; \n",
  "           &lt;/a&gt; \n",
  "        &lt;/div&gt; \n",
  "      &lt;/div&gt; \n",
  "    \n",
  "\n",
  "     &lt;div   class=  &quot;document&quot;  &gt; \n",
  "       &lt;div   class=  &quot;documentwrapper&quot;  &gt; \n",
  "         &lt;div   class=  &quot;fullbodywrapper&quot;  &gt; \n",
  "           &lt;div   class=  &quot;body&quot;   role=  &quot;main&quot;  &gt; \n",
  "            \n",
  " &lt;h1   class=  &quot;heading&quot;  &gt; Demo entry 1487118 &lt;/h1&gt; \n",
  "\n",
  " &lt;p&gt;&lt;strong&gt; namespace init in CS &lt;/strong&gt;&lt;/p&gt; \n",
  "\n",
  " &lt;form   action=  &quot;/demo/1487118/&quot;   method=  &quot;get&quot;   name=  &quot;filter_form&quot;   id=  &quot;filter_form&quot;  &gt; \n",
  "   &lt;p   style=  &quot;margin-top: 0&quot;  &gt;&lt;label   for=  &quot;style&quot;  &gt; Use this style: &lt;/label&gt;   &amp;nbsp; \n",
  "     &lt;select   id=  &quot;style&quot;   name=  &quot;style&quot;   onchange=  &quot;document.forms.filter_form.submit()&quot;  &gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;manni&quot;   &gt; manni &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;igor&quot;   &gt; igor &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;xcode&quot;   &gt; xcode &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;vim&quot;   &gt; vim &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;autumn&quot;   &gt; autumn &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;vs&quot;   &gt; vs &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;rrt&quot;   &gt; rrt &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;native&quot;   &gt; native &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;perldoc&quot;   &gt; perldoc &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;borland&quot;   &gt; borland &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;tango&quot;   &gt; tango &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;emacs&quot;   &gt; emacs &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;friendly&quot;   selected=  &quot;selected&quot;  &gt; friendly &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;monokai&quot;   &gt; monokai &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;paraiso-dark&quot;   &gt; paraiso-dark &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;colorful&quot;   &gt; colorful &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;murphy&quot;   &gt; murphy &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;bw&quot;   &gt; bw &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;pastie&quot;   &gt; pastie &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;paraiso-light&quot;   &gt; paraiso-light &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;trac&quot;   &gt; trac &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;default&quot;   &gt; default &lt;/option&gt; \n",
  "      \n",
  "       &lt;option   value=  &quot;fruity&quot;   &gt; fruity &lt;/option&gt; \n",
  "      \n",
  "     &lt;/select&gt;   &amp;nbsp; \n",
  "     &lt;input   type=  &quot;submit&quot;   value=  &quot;Go&quot;  &gt; \n",
  "   &lt;/p&gt; \n",
  " &lt;/form&gt; \n",
  "\n",
  " &lt;p&gt; Submitted by  &lt;strong&gt; Jesus Franco &lt;/strong&gt; \n",
  "  on Apr 17, 2015 at 17:46  &lt;br&gt; \n",
  "  Language: CoffeeScript. Code size: 1.4 kB.\n",
  " &lt;/p&gt; \n",
  "\n",
  "\n",
  "\n",
  " &lt;div   class=  &quot;hlcode&quot;  &gt; \n",
  " &lt;div   class=  &quot;syntax&quot;  &gt;&lt;pre&gt;&lt;span   class=  &quot;nv&quot;  &gt; extend =  &lt;/span&gt;&lt;span   class=  &quot;nf&quot;  &gt; (inject, template) - &amp;gt;  &lt;/span&gt; \n",
  "   &lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; template &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; prop &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ] &lt;/span&gt;   &lt;span   class=  &quot;o&quot;  &gt; = &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; inject &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; prop &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ]) &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; for &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; own &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; prop &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; of &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; inject &lt;/span&gt; \n",
  "   &lt;span   class=  &quot;kc&quot;  &gt; null &lt;/span&gt; \n",
  "\n",
  " &lt;span   class=  &quot;nv&quot;  &gt; init_namespace =  &lt;/span&gt;&lt;span   class=  &quot;nf&quot;  &gt; (nameString, obj, container) - &amp;gt;  &lt;/span&gt; \n",
  "     &lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;   &lt;span   class=  &quot;o&quot;  &gt; ?= &lt;/span&gt;   &lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt; \n",
  "     &lt;span   class=  &quot;nv&quot;  &gt; names =  &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; nameString &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; split &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;s&quot;  &gt;  &amp;#39; . &amp;#39;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ) &lt;/span&gt; \n",
  "     &lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; name &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ] &lt;/span&gt;   &lt;span   class=  &quot;o&quot;  &gt; or= &lt;/span&gt;   &lt;span   class=  &quot;p&quot;  &gt; {} &lt;/span&gt;   &lt;span   class=  &quot;p&quot;  &gt; ; &lt;/span&gt; \n",
  "     &lt;span   class=  &quot;nv&quot;  &gt; container =  &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; [ &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; name &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ]) &lt;/span&gt;   &lt;span   class=  &quot;k&quot;  &gt; while &lt;/span&gt;   &lt;span   class=  &quot;nv&quot;  &gt; name =  &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; names &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; shift &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt; \n",
  "     &lt;span   class=  &quot;nx&quot;  &gt; extend &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; obj &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nx&quot;  &gt; container &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ) &lt;/span&gt; \n",
  "\n",
  " &lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; Namespace DRY initializer &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "     &lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; A simple name init &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "         &lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; a simple name should be available in global object &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; init_namespace &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; simple &amp;quot;  &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeDefined &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt; \n",
  "\n",
  "     &lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; A two levels nested name path &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "         &lt;span   class=  &quot;nx&quot;  &gt; beforeEach &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nv&quot;  &gt; simple =  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; null &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; init_namespace &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; simple.nested &amp;quot;  &lt;/span&gt; \n",
  "\n",
  "         &lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; makes available its top name in container &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeDefined &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt; \n",
  "         &lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; makes available its child name in container &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; nested &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeDefined &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt; \n",
  "\n",
  "     &lt;span   class=  &quot;nx&quot;  &gt; describe &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; A custom passed object &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "         &lt;span   class=  &quot;nx&quot;  &gt; it &lt;/span&gt;   &lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; set its properties to ns &amp;#39;  deepest child &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;   &lt;span   class=  &quot;nf&quot;  &gt; - &amp;gt;  &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nv&quot;  &gt; simple =  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; null &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; init_namespace &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;s&quot;  &gt;  &amp;quot; simple.nested.ns &amp;quot;  &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; , &lt;/span&gt;  \n",
  "                       &lt;span   class=  &quot;nv&quot;  &gt; custom:  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; true &lt;/span&gt; \n",
  "                       &lt;span   class=  &quot;nv&quot;  &gt; queryable:  &lt;/span&gt;&lt;span   class=  &quot;kc&quot;  &gt; false &lt;/span&gt; \n",
  "                 &lt;span   class=  &quot;p&quot;  &gt; ) &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt;&lt;span   class=  &quot;o&quot;  &gt; = &lt;/span&gt;&lt;span   class=  &quot;nb&quot;  &gt; window &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; simple &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; nested &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; custom &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeTruthy &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt; \n",
  "             &lt;span   class=  &quot;nx&quot;  &gt; expect &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ( &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; ns &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; . &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; queryable &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; ). &lt;/span&gt;&lt;span   class=  &quot;nx&quot;  &gt; toBeFalsy &lt;/span&gt;&lt;span   class=  &quot;p&quot;  &gt; () &lt;/span&gt; \n",
  " &lt;/pre&gt;&lt;/div&gt; \n",
  "\n",
  " &lt;/div&gt; \n",
  "\n",
  " &lt;p&gt; This snippet took 0.00 seconds to highlight. &lt;/p&gt; \n",
  "\n",
  " &lt;p&gt; Back to the  &lt;a   href=  &quot;/demo/&quot;  &gt; Entry List &lt;/a&gt;  or  &lt;a   href=  &quot;/&quot;  &gt; Home &lt;/a&gt; . &lt;/p&gt; \n",
  "\n",
  " &lt;p   style=  &quot;font-size: xx-small&quot;  &gt;&lt;a   href=  &quot;/demo/1487118/delete/&quot;  &gt; Delete this entry (admin only) &lt;/a&gt; . &lt;/p&gt; \n",
  "\n",
  "           &lt;/div&gt; \n",
  "         &lt;/div&gt; \n",
  "       &lt;/div&gt; \n",
  "\n",
  "       &lt;div   class=  &quot;clearer&quot;  &gt;&lt;/div&gt; \n",
  "     &lt;/div&gt; \n",
  "       &lt;div   class=  &quot;footer&quot;   role=  &quot;contentinfo&quot;  &gt; \n",
  "         &amp;copy;  Copyright 2014, Georg Brandl and Pygments contributors.\n",
  "        Created using  &lt;a   href=  &quot;http://sphinx-doc.org/&quot;  &gt; Sphinx &lt;/a&gt;  .  &lt;br/&gt; \n",
  "        Pygments logo created by  &lt;a   href=  &quot;http://dribbble.com/joelunger&quot;  &gt; Joel Unger &lt;/a&gt; .\n",
  "        Backgrounds from  &lt;a   href=  &quot;http://subtlepatterns.com&quot;  &gt; subtlepatterns.com &lt;/a&gt; .\n",
  "       &lt;/div&gt; \n",
  "     &lt;/div&gt;  \n",
  "   &lt;/body&gt; \n",
  " &lt;/html&gt; \n",
  "  \n",
  "\n",
  " \n",
  "\n",
  "<p>This snippet took 0.01 seconds to highlight.</p>\n",
  "\n",
  "<p>Back to the  Entry List</a> or  Home</a>.</p>\n",
  "\n",
  "  Delete this entry (admin only)</a>.</p>\n",
  "\n",
  "           \n",
  "         \n",
  "       \n",
  "\n",
  "        \n",
  "     \n",
  "       \n",
  "        &copy; Copyright 2014, Georg Brandl and Pygments contributors.\n",
  "        Created using  Sphinx</a> .  \n",
  "        Pygments logo created by  Joel Unger</a>.\n",
  "        Backgrounds from  subtlepatterns.com</a>.\n",
  "       \n",
  "      \n",
  "   \n",
  "</html>"
]